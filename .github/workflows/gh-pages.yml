name: Build

on:
  push:
    branches: 
      - source

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PAGE_BUILDER_TAG: page-builder:1.0.0
      UZU_TAG: nahcnuj/alpine-uzu:1.2.1
      SASS_TAG: nahcnuj/alpine-sassc:3.6.1
      MUSTACHE_CACHE_KEY: mustache-cache.tar
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_USERNAME: GitHub Actions
      SLACK_CHANNEL: www-nahcnuj-work

    steps:
      - uses: actions/checkout@v2

      - id: cache-page-builder
        name: Cache page-builder Docker image
        uses: actions/cache@v2
        with:
          path: /tmp/${{ env.PAGE_BUILDER_TAG }}
          key: ${{ env.PAGE_BUILDER_TAG }}_${{ runner.os }}

      - name: Load page-builder Docker image from cache
        if: steps.cache-page-builder.outputs.cache-hit == 'true'
        run: docker load -i /tmp/$PAGE_BUILDER_TAG

      - id: cache-mustache
        name: Cache generated mustache templates
        uses: actions/cache@v2
        with:
          path: ${{ env.MUSTACHE_CACHE_KEY }}
          key: ${{ env.MUSTACHE_CACHE_KEY }}

      - name: Generate Mustache templates from R Markdown files
        run: |
          tar -xzvf $MUSTACHE_CACHE_KEY || true
          make gen-page
          tar -czvf $MUSTACHE_CACHE_KEY pages/*/

      - id: cache-uzu
        name: Cache my Uzu Docker image
        uses: actions/cache@v2
        with:
          path: ${{ env.UZU_TAG }}
          key: ${{ env.UZU_TAG }}_${{ runner.os }}

      - name: Pull and save the Uzu Docker image
        if: steps.cache-uzu.outputs.cache-hit != 'true'
        run: |
          docker pull $UZU_TAG
          dirname $UZU_TAG | xargs mkdir -p
          docker save $UZU_TAG -o $UZU_TAG

      - name: Load the Uzu Docker image
        run: docker load -i $UZU_TAG

      - name: Build HTML
        run: make html

      - id: cache-sass
        name: Cache my Sass Docker image
        uses: actions/cache@v2
        with:
          path: ${{ env.SASS_TAG }}
          key: ${{ env.SASS_TAG }}_${{ runner.os }}

      - name: Pull and save the Sass Docker image
        if: steps.cache-sass.outputs.cache-hit != 'true'
        run: |
          docker pull $SASS_TAG
          dirname $SASS_TAG | xargs mkdir -p
          docker save $SASS_TAG -o $SASS_TAG

      - name: Load the Sass Docker image
        run: docker load -i $SASS_TAG

      - name: Build CSS
        run: make css

      - name: Push to staging branch
        uses: peaceiris/actions-gh-pages@v3.6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: staging-${{ github.run_id }}
          publish_dir: ./build

      - name: Create a Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: staging-${{ github.run_id }}
          base: master
        continue-on-error: true

      - name: Notify success to Slack
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Deployed successfully!
          SLACK_COLOR: good
          MSG_MINIMAL: true

      - name: Notify failure to Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Failed to deploy
          SLACK_COLOR: danger
          MSG_MINIMAL: actions url
