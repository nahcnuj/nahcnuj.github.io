name: Build

on:
  push:
    branches: 
      - source

jobs:
  html:
    runs-on: ubuntu-latest

    env:
      UZU_TAG: nahcnuj/alpine-uzu:1.2.1

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - run: perl bin/srz-zumix/git-set-file-times --since 2020-06-07

      - id: cache-page-builder
        name: Cache page-builder Docker image
        uses: actions/cache@v2
        with:
          key: page-builder_${{ hashFiles('docker/page-builder/**','bin/rmd2mustache.raku') }}_${{ runner.os }}
          path: /tmp/page-builder.image

      - id: cache-uzu
        name: Cache my Uzu Docker image
        uses: actions/cache@v2
        with:
          key: ${{ env.UZU_TAG }}_${{ runner.os }}
          path: /tmp/uzu.image

      - name: Pull and save the Uzu Docker image
        if: steps.cache-uzu.outputs.cache-hit != 'true'
        run: |
          docker pull $UZU_TAG
          docker save $UZU_TAG -o /tmp/uzu.image

      - name: Cache artifacts
        uses: actions/cache@v2
        with:
          key: html_artifacts_${{ hashFiles('i18n/**','pages/**','partials/**','public/**','rmd/**','themes/**','docker-compose.yml','docker/page-builder/**','bin/rmd2mustache.raku') }}
          path: build

      - name: Cache generated mustache templates
        uses: actions/cache@v2
        with:
          key: mustache_${{ hashFiles('rmd/**') }}
          path: |
            pages/diary

      - run: make --trace gen-page
      - run: make --trace html

      - uses: actions/upload-artifact@v2
        with:
          name: html
          path: build

      - name: Notify failure to Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: Failed to deploy
          SLACK_COLOR: danger
          MSG_MINIMAL: actions url

  css:
    runs-on: ubuntu-latest

    env:
      SASS_TAG: michalklempa/dart-sass:1.36

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - run: perl bin/srz-zumix/git-set-file-times --since 2020-06-07

      - id: cache-sass
        name: Cache my Sass Docker image
        uses: actions/cache@v2
        with:
          key: ${{ env.SASS_TAG }}_${{ runner.os }}
          path: /tmp/sass.image

      - name: Pull and save the Sass Docker image
        if: steps.cache-sass.outputs.cache-hit != 'true'
        run: |
          docker pull $SASS_TAG
          docker save $SASS_TAG -o /tmp/sass.image

      - name: Cache artifacts
        uses: actions/cache@v2
        with:
          key: css_artifacts_${{ hashFiles('sass/**','docker-compose.yml') }}
          path: build/css

      - run: make --trace css

      - uses: actions/upload-artifact@v2
        with:
          name: css
          path: build/css

      - name: Notify failure to Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: Failed to deploy
          SLACK_COLOR: danger
          MSG_MINIMAL: actions url

  deploy:
    runs-on: ubuntu-latest
    needs:
      - html
      - css

    steps:
      - uses: actions/checkout@v3
        with:
          ref: staging

      - uses: actions/download-artifact@v2
        with:
          name: html
          path: build

      - uses: actions/download-artifact@v2
        with:
          name: css
          path: build/css

      - uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: staging
          publish_dir: ./build
          exclude_assets: '**/.gitignore'
          cname: www.nahcnuj.work

      - id: create-pull-request
        name: Create a Pull Request to master branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REVIEWER: ${{ github.repository_owner }}
        run: |
          git fetch -q origin staging master
          [ $(git log --oneline origin/staging ^origin/master | wc -l) -eq 0 ] && exit 0
          pr_url=$(gh pr create -B master -H staging -t "Release $(TZ=JST-9 date '+%Y-%m-%d %H:%M')" -b '' -r "${REVIEWER}" -l deployment)
          if [ ! -z "${pr_url}" ]
          then
            gh pr merge --auto --merge "${pr_url}"
            echo "::set-output name=pull-request-url::${pr_url}"
          fi

      - name: Notify success to Slack
        if: success() && startsWith(steps.create-pull-request.outputs.pull-request-url, 'https://')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: Ready to deploy!
          SLACK_MESSAGE: |
            Check ${{ steps.create-pull-request.outputs.pull-request-url }}/files
          SLACK_COLOR: good
          MSG_MINIMAL: true

      - name: Notify failure to Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: Failed to deploy
          SLACK_COLOR: danger
          MSG_MINIMAL: actions url
